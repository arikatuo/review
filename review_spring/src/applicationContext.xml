<?xml version="1.0" encoding="UTF-8"?>
<beans
        xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- 配置需要被Spring管理的Bean（创建，创建后放在了Spring IOC容器里面）-->
    <bean id="hello" class="com.hy.java.HelloWorld">
        <!-- 配置该Bean需要注入的属性（是通过属性set方法来注入的） -->
        <property name="info" value="Happy New Year!"/>
    </bean>

    <bean id="stu1" name="stu1" class="com.hy.model.Stu1">
        <constructor-arg>
            <value>韩懿帅逼</value>
        </constructor-arg>
        <constructor-arg>
            <value>男</value>
        </constructor-arg>
        <constructor-arg>
            <value>21</value>
        </constructor-arg>
    </bean>

    <bean id="moniter" name="moniter" class="com.hy.model.Moniter">
        <property name="sex" value="女"/>

        <property name="age" value="21"/>
        <property name="name" value="李燕女士"/>
    </bean>


    <bean id="school" class="com.hy.model.School">
        <!--List 注入例子 -->
        <property name="listStu">
            <list>
                <ref bean="moniter"/>  <!--使用上面已定义好的bean -->
                <ref bean="moniter"/>  <!--使用上面已定义好的bean -->
                <ref bean="stu1"/>     <!--使用上面已定义好的bean -->
                <bean class="com.hy.model.Moniter"> <!--定义学生匿名内部类，用setter方法注入 -->
                    <property name="age" value="20"/>
                    <property name="name" value="阿屁"/>
                    <property name="sex" value="男"/>
                </bean>
                <value>1</value>
                <value>hello</value>
            </list>
        </property>

        <!--set 注入例子 -->
        <property name="setStu">
            <set>
                <ref bean="moniter"/>  <!--使用上面已定义好的bean -->
                <ref bean="stu1"/>     <!--使用上面已定义好的bean -->
                <ref bean="stu1"/>     <!--使用上面已定义好的bean -->
                <bean class="com.hy.model.Stu1"> <!--定义学生匿名内部类，用constructor方法注入 -->
                    <constructor-arg value="大平" index="0"></constructor-arg>
                    <constructor-arg value="男" index="1"></constructor-arg>
                    <constructor-arg value="10" index="2"></constructor-arg>
                </bean>
                <value>333333</value>
                <value>Evankaka</value>
            </set>
        </property>

        <!--map 注入例子 -->
        <property name="mapStu">
            <map>
                <entry key="key1">
                    <ref bean="moniter"/>  <!--使用上面已定义好的bean -->
                </entry>
                <entry key="key2">
                    <bean class="com.hy.model.Moniter"> <!--定义学生匿名内部类，用setter方法注入 -->
                        <property name="age" value="80"/>
                        <property name="name" value="小王"/>
                        <property name="sex" value="男"/>
                    </bean>
                </entry>
                <entry key="key3">
                    <value>student2</value>
                </entry>
                <entry key="key4">
                    <value>56</value>
                </entry>

            </map>

        </property>

    </bean>


    <bean id="students" class="com.hy.model.Students">
        <property name="ID" value="1"/>
        <property name="name" value="a"/>
        <property name="age" value="1"/>
        <property name="sex" value="男"/>
    </bean>

    <bean id="teacher" class="com.hy.model.Teacher" >
        <property name="ID">
            <value>1</value>
        </property>

        <property name="name" value="b"/>
        <property name="age" value="2"/>
        <property name="sex" value="男"/>

    </bean>

    <bean id="teachFile1" class="com.hy.model.TeachFile" >
        <property name="students" ref="students"/>
        <property name="teacher" ref="teacher"/>
    </bean>

    <bean id="teachFile2" class="com.hy.model.TeachFile" autowire="byName"/>

    <bean id="teachFile3" class="com.hy.model.TeachFile" autowire="byType"/>

    <bean id="teachFile4" class="com.hy.model.TeachFile" autowire="constructor"/>

    <bean id="personService" class="com.hy.model.PersonService" scope="singleton"  init-method="init"  destroy-method="cleanUp">

    </bean>

    <context:component-scan base-package="com.hy.model" />
</beans>